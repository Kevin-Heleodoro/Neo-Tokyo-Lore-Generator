name: Neo Tokyo Lore Generator CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Job for setting up Node.js
  setup-node:
    name: Set up Node.js
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  # Job for the backend
  backend:
    name: Backend Build and Test
    runs-on: ubuntu-latest
    needs: setup-node
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up backend dependencies
        working-directory: ./backend
        run: npm install

      # - name: Lint backend
      #   working-directory: ./backend
      #   run: npm run lint

      # - name: Test backend
      #   working-directory: ./backend
      #   run: npm test

      - name: Build backend
        working-directory: ./backend
        run: npm run build

  # Job for the frontend
  frontend:
    name: Frontend Build and Test
    runs-on: ubuntu-latest
    needs: setup-node
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up frontend dependencies
        working-directory: ./frontend
        run: npm install

      # - name: Lint frontend
      #   working-directory: ./frontend
      #   run: npm run lint

      # - name: Test frontend
      #   working-directory: ./frontend
      #   run: npm test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
